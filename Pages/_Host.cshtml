@page "/"
@namespace BlazorApp18.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>BlazorApp18</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
</head>
<body>
    <app>
        <component type="typeof(App)" render-mode="ServerPrerendered" />
    </app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script>
        window.VirtualizedComponent = {
            _initialize: function (component, contentElement) {
                // Find closest scrollable container
                let scrollableContainer = contentElement.parentElement;
                while (!(scrollableContainer.style.overflow || scrollableContainer.style.overflowY)) {
                    scrollableContainer = scrollableContainer.parentElement;
                    if (!scrollableContainer) {
                        throw new Error('No scrollable container was found around VirtualizedComponent.');
                    }
                }

                // TODO: Also listen for 'scrollableContainer' being resized or 'contentElement' moving
                // within it, and notify.NET side
                // TODO: Debounce these scroll events
                scrollableContainer.addEventListener('scroll', e => {
                    requestIdleCallback(() => {
                        component.invokeMethodAsync('OnScroll', {
                            containerRect: scrollableContainer.getBoundingClientRect(),
                            contentRect: readClientRectWithoutTransform(contentElement)
                        });
                    });
                });

                return {
                    containerRect: scrollableContainer.getBoundingClientRect(),
                    contentRect: readClientRectWithoutTransform(contentElement)
                };
            }
        };

        function readClientRectWithoutTransform(elem) {
            // I hate this. I'm sure there's a cleaner alternative!
            const rect = elem.getBoundingClientRect();
            const translateY = parseFloat(elem.getAttribute('data-translateY'));
            return { top: rect.top - translateY, bottom: rect.bottom - translateY, left: rect.left, right: rect.right, height: rect.height, width: rect.width };
        }
    </script>

    <script src="_framework/blazor.server.js"></script>
</body>
</html>
